import os
import sys
sys.path.append('..')
sys.path.append('../..')
from toolkit.base_function import dirs_walk
import shutil
 
# os.remove(path)   #删除文件
# os.removedirs(path)   #删除空文件夹
 
# os.rmdir(path)    #删除空文件夹
 
# shutil.rmtree(path)    #递归删除文件夹，即：删除非空文件夹

def generate_file_lists(dataset,if_train,method='gt',save_method='delete'):

    '''
    input:
        dataset: choose type of dataset
        method: determine dir to load disparity maps; ep: (1)gt for groundtruth (2) PSMNet for disparity maps generated by PSMNet
        save_method: determine dir to save output disparity maps; ep: (1)gt for groundtruth (2) PSMNet for disparity maps generated by PSMNet
        if_train: choose training set or testing set
    output:
        return a dictionary of {path of left images, right images, input disparity maps, output disparity maps}
    '''

    assert dataset in ['VirtualRoad','realroad'],dataset

    if dataset == 'realroad':
        dataset_paths = ['../datasets/real_road/dataset1']
        left_list = []
        right_list = []
        disp_list = []
        for dataset_path in dataset_paths:

            left_dir = os.path.join(dataset_path,'left')
            right_dir = os.path.join(dataset_path,'right') # right, right_PT
            if method == 'gt':
                disp_dir = os.path.join(dataset_path,'pt_disp/disp')
            else:
                disp_dir = os.path.join(dataset_path,'saved/{}/disp'.format(method))
            left_list+=dirs_walk([left_dir])
            right_list+=dirs_walk([right_dir])
            disp_list+=dirs_walk([disp_dir])

        save_path_disp = []
        save_path_disp_image = []
        for i in range(len(left_list)):
            split_path = left_list[i].split('/')
            name = split_path[-1].split('.')[0]
            save_dir = '/'.join(split_path[:-2])
            save_dir1 = os.path.join(save_dir,'saved/{}/disp'.format(save_method))
            save_dir2 = os.path.join(save_dir,'saved/{}/vis'.format(save_method))
            save_path1 = os.path.join(save_dir1,'{}.npy'.format(name))
            save_path2 = os.path.join(save_dir2,'{}.png'.format(name))
            save_path_disp.append(save_path1)
            save_path_disp_image.append(save_path2)
            if not os.path.exists(save_dir1):
                os.makedirs(save_dir1)
            if not os.path.exists(save_dir2):
                os.makedirs(save_dir2)

    if 'VirtualRoad' in dataset:
        dataset_paths = ['../datasets/Virtual_road/WetRoad1/ClearNoon/roll0/base05','../datasets/Virtual_road/WetRoad1/ClearSunset/roll0/base05','../datasets/Virtual_road/WetRoad1/ClearNight/roll0/base05','../datasets/Virtual_road/WetRoad1/WetCloudyNoon/roll0/base05','../datasets/Virtual_road/WetRoad1/WetCloudySunset/roll0/base05','../datasets/Virtual_road/WetRoad1/WetCloudyNight/roll0/base05','../datasets/Virtual_road/Tiled_V2/ClearNoon/roll0/base05','../datasets/Virtual_road/Tiled_V2/ClearSunset/roll0/base05','../datasets/Virtual_road/Tiled_V2/ClearNight/roll0/base05','../datasets/Virtual_road/Tiled_V2/WetCloudyNoon/roll0/base05','../datasets/Virtual_road/Tiled_V2/WetCloudySunset/roll0/base05','../datasets/Virtual_road/Tiled_V2/WetCloudyNight/roll0/base05']
                        
        left_list = []
        right_list = []
        disp_list = []
        save_path_disp = []
        save_path_disp_image = []

        for dataset_path in dataset_paths:

            left_dir = os.path.join(dataset_path,'rgb_front_left')
            left_list+=dirs_walk([left_dir])

        for i in range(len(left_list)):

            right_list.append(left_list[i].replace('rgb_front_left','rgb_front_right'))
            if method == 'gt':
                disp_list.append(left_list[i].replace('rgb_front_left','disparity_noc/disp').replace('png','npy')) # 'disparity_noc/disp'， 'disparity_left'
            else:
                disp_list.append(left_list[i].replace('rgb_front_left','saved/{}/disp'.format(method)).replace('png','npy')) # 'disparity_noc/disp'， 'disparity_left'

            split_path = left_list[i].split('/')
            name = split_path[-1].split('.')[0]
            save_dir = '/'.join(split_path[:-2])
            save_dir1 = os.path.join(save_dir,'saved/{}/disp'.format(save_method))
            save_dir2 = os.path.join(save_dir,'saved/{}/vis'.format(save_method))
            save_path1 = os.path.join(save_dir1,'{}.npy'.format(name))
            save_path2 = os.path.join(save_dir2,'{}.png'.format(name))
            save_path_disp.append(save_path1)
            save_path_disp_image.append(save_path2)
            if not os.path.exists(save_dir1):
                os.makedirs(save_dir1)
            if not os.path.exists(save_dir2):
                os.makedirs(save_dir2)

    left_list.sort()
    right_list.sort()
    disp_list.sort()
    save_path_disp.sort()
    save_path_disp_image.sort()
        

    print('{} of left images, {} of right images, {} of disp files'.format(len(left_list),len(right_list),len(disp_list)))
    return {'left_list':left_list,'right_list':right_list,'disp_list':disp_list,'save_path_disp':save_path_disp,'save_path_disp_image':save_path_disp_image}

def virtual_road_clear():
    dataset_paths = ['../datasets/Virtual_road/WetRoad1/ClearNoon/roll0/base05','../datasets/Virtual_road/WetRoad1/ClearSunset/roll0/base05','../datasets/Virtual_road/WetRoad1/ClearNight/roll0/base05','../datasets/Virtual_road/WetRoad1/WetCloudyNoon/roll0/base05','../datasets/Virtual_road/WetRoad1/WetCloudySunset/roll0/base05','../datasets/Virtual_road/WetRoad1/WetCloudyNight/roll0/base05','../datasets/Virtual_road/Tiled_V2/ClearNoon/roll0/base05','../datasets/Virtual_road/Tiled_V2/ClearSunset/roll0/base05','../datasets/Virtual_road/Tiled_V2/ClearNight/roll0/base05','../datasets/Virtual_road/Tiled_V2/WetCloudyNoon/roll0/base05','../datasets/Virtual_road/Tiled_V2/WetCloudySunset/roll0/base05','../datasets/Virtual_road/Tiled_V2/WetCloudyNight/roll0/base05']
    reserve_list = ['depth_left','depth_right','disparity_left','disparity_right','rgb_front_left','rgb_front_right','semantic_segmentation_left','semantic_segmentation_right','pt_right','disparity_noc','pt_disp']
    for dataset_path in dataset_paths:
        seqs = sorted(os.listdir(dataset_path))
        for s in seqs:
            if not s in reserve_list:
                print(os.path.join(dataset_path,s))
                shutil.rmtree(os.path.join(dataset_path,s))


def realroad_clear():
    dataset_paths = ['../datasets/real_road/dataset1/saved','../datasets/real_road/dataset2/saved','../datasets/real_road/dataset3/saved']
    reserve_list = ['noc_mask']
    for dataset_path in dataset_paths:
        seqs = sorted(os.listdir(dataset_path))
        for s in seqs:
            if not s in reserve_list:
                print(os.path.join(dataset_path,s))
                shutil.rmtree(os.path.join(dataset_path,s))